name: Build, Push, Plan

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read
  pull-requests: write

env:
  ECR_REPOSITORY: chat-server
  TF_CLOUD_ORGANIZATION: "AsteriskChat"
  TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
  TF_WORKSPACE: chat-server
  CONFIG_DIRECTORY: ./ci


jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ vars.AWS_ROLE_ARN }}
          aws-region: ${{ vars.AWS_REGION }}
          role-session-name: GitHub-OIDC

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build \
            --build-arg PINECONE_KEY=${{ secrets.PINECONE_KEY }} \
            --build-arg OPENAI_KEY=${{ secrets.OPENAI_KEY }} \
            --build-arg DYNAMODB_KEY=${{ secrets.DYNAMODB_KEY }} \
            --build-arg AUTH0_KEY=${{ secrets.AUTH0_KEY }} \
            -t $ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG .
          docker push $ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG